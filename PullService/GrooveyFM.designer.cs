#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18033
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PullService
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="grooveyfm")]
	public partial class GrooveyFMDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertNoResult(NoResult instance);
    partial void UpdateNoResult(NoResult instance);
    partial void DeleteNoResult(NoResult instance);
    partial void InsertStat(Stat instance);
    partial void UpdateStat(Stat instance);
    partial void DeleteStat(Stat instance);
    partial void InsertPlaylist(Playlist instance);
    partial void UpdatePlaylist(Playlist instance);
    partial void DeletePlaylist(Playlist instance);
    partial void InsertSearchQueue(SearchQueue instance);
    partial void UpdateSearchQueue(SearchQueue instance);
    partial void DeleteSearchQueue(SearchQueue instance);
    partial void InsertSource(Source instance);
    partial void UpdateSource(Source instance);
    partial void DeleteSource(Source instance);
    partial void InsertSourceType(SourceType instance);
    partial void UpdateSourceType(SourceType instance);
    partial void DeleteSourceType(SourceType instance);
    partial void InsertStation(Station instance);
    partial void UpdateStation(Station instance);
    partial void DeleteStation(Station instance);
    #endregion
		
		public GrooveyFMDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GrooveyFMDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GrooveyFMDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GrooveyFMDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<NoResult> NoResults
		{
			get
			{
				return this.GetTable<NoResult>();
			}
		}
		
		public System.Data.Linq.Table<Stat> Stats
		{
			get
			{
				return this.GetTable<Stat>();
			}
		}
		
		public System.Data.Linq.Table<Playlist> Playlists
		{
			get
			{
				return this.GetTable<Playlist>();
			}
		}
		
		public System.Data.Linq.Table<SearchQueue> SearchQueues
		{
			get
			{
				return this.GetTable<SearchQueue>();
			}
		}
		
		public System.Data.Linq.Table<Source> Sources
		{
			get
			{
				return this.GetTable<Source>();
			}
		}
		
		public System.Data.Linq.Table<SourceType> SourceTypes
		{
			get
			{
				return this.GetTable<SourceType>();
			}
		}
		
		public System.Data.Linq.Table<Station> Stations
		{
			get
			{
				return this.GetTable<Station>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NoResults")]
	public partial class NoResult : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Title;
		
		private string _Artist;
		
		private System.DateTime _DateAdded;
		
		private bool _Manual;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnArtistChanging(string value);
    partial void OnArtistChanged();
    partial void OnDateAddedChanging(System.DateTime value);
    partial void OnDateAddedChanged();
    partial void OnManualChanging(bool value);
    partial void OnManualChanged();
    #endregion
		
		public NoResult()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Artist", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Artist
		{
			get
			{
				return this._Artist;
			}
			set
			{
				if ((this._Artist != value))
				{
					this.OnArtistChanging(value);
					this.SendPropertyChanging();
					this._Artist = value;
					this.SendPropertyChanged("Artist");
					this.OnArtistChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateAdded", DbType="DateTime NOT NULL")]
		public System.DateTime DateAdded
		{
			get
			{
				return this._DateAdded;
			}
			set
			{
				if ((this._DateAdded != value))
				{
					this.OnDateAddedChanging(value);
					this.SendPropertyChanging();
					this._DateAdded = value;
					this.SendPropertyChanged("DateAdded");
					this.OnDateAddedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Manual", DbType="Bit NOT NULL")]
		public bool Manual
		{
			get
			{
				return this._Manual;
			}
			set
			{
				if ((this._Manual != value))
				{
					this.OnManualChanging(value);
					this.SendPropertyChanging();
					this._Manual = value;
					this.SendPropertyChanged("Manual");
					this.OnManualChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Stats")]
	public partial class Stat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.DateTime _Date;
		
		private int _Hour;
		
		private int _Station;
		
		private int _Searches;
		
		private int _Inserts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnHourChanging(int value);
    partial void OnHourChanged();
    partial void OnStationChanging(int value);
    partial void OnStationChanged();
    partial void OnSearchesChanging(int value);
    partial void OnSearchesChanged();
    partial void OnInsertsChanging(int value);
    partial void OnInsertsChanged();
    #endregion
		
		public Stat()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hour", DbType="Int NOT NULL")]
		public int Hour
		{
			get
			{
				return this._Hour;
			}
			set
			{
				if ((this._Hour != value))
				{
					this.OnHourChanging(value);
					this.SendPropertyChanging();
					this._Hour = value;
					this.SendPropertyChanged("Hour");
					this.OnHourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Station", DbType="Int NOT NULL")]
		public int Station
		{
			get
			{
				return this._Station;
			}
			set
			{
				if ((this._Station != value))
				{
					this.OnStationChanging(value);
					this.SendPropertyChanging();
					this._Station = value;
					this.SendPropertyChanged("Station");
					this.OnStationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Searches", DbType="Int NOT NULL")]
		public int Searches
		{
			get
			{
				return this._Searches;
			}
			set
			{
				if ((this._Searches != value))
				{
					this.OnSearchesChanging(value);
					this.SendPropertyChanging();
					this._Searches = value;
					this.SendPropertyChanged("Searches");
					this.OnSearchesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Inserts", DbType="Int NOT NULL")]
		public int Inserts
		{
			get
			{
				return this._Inserts;
			}
			set
			{
				if ((this._Inserts != value))
				{
					this.OnInsertsChanging(value);
					this.SendPropertyChanging();
					this._Inserts = value;
					this.SendPropertyChanged("Inserts");
					this.OnInsertsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Playlists")]
	public partial class Playlist : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Title;
		
		private string _Artist;
		
		private long _SongId;
		
		private int _Station;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnArtistChanging(string value);
    partial void OnArtistChanged();
    partial void OnSongIdChanging(long value);
    partial void OnSongIdChanged();
    partial void OnStationChanging(int value);
    partial void OnStationChanged();
    #endregion
		
		public Playlist()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Artist", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Artist
		{
			get
			{
				return this._Artist;
			}
			set
			{
				if ((this._Artist != value))
				{
					this.OnArtistChanging(value);
					this.SendPropertyChanging();
					this._Artist = value;
					this.SendPropertyChanged("Artist");
					this.OnArtistChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SongId", DbType="BigInt NOT NULL")]
		public long SongId
		{
			get
			{
				return this._SongId;
			}
			set
			{
				if ((this._SongId != value))
				{
					this.OnSongIdChanging(value);
					this.SendPropertyChanging();
					this._SongId = value;
					this.SendPropertyChanged("SongId");
					this.OnSongIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Station", DbType="Int NOT NULL")]
		public int Station
		{
			get
			{
				return this._Station;
			}
			set
			{
				if ((this._Station != value))
				{
					this.OnStationChanging(value);
					this.SendPropertyChanging();
					this._Station = value;
					this.SendPropertyChanged("Station");
					this.OnStationChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SearchQueue")]
	public partial class SearchQueue : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _Station;
		
		private string _Title;
		
		private string _Artist;
		
		private System.DateTime _DateAdded;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnStationChanging(int value);
    partial void OnStationChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnArtistChanging(string value);
    partial void OnArtistChanged();
    partial void OnDateAddedChanging(System.DateTime value);
    partial void OnDateAddedChanged();
    #endregion
		
		public SearchQueue()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Station", DbType="Int NOT NULL")]
		public int Station
		{
			get
			{
				return this._Station;
			}
			set
			{
				if ((this._Station != value))
				{
					this.OnStationChanging(value);
					this.SendPropertyChanging();
					this._Station = value;
					this.SendPropertyChanged("Station");
					this.OnStationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Artist", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Artist
		{
			get
			{
				return this._Artist;
			}
			set
			{
				if ((this._Artist != value))
				{
					this.OnArtistChanging(value);
					this.SendPropertyChanging();
					this._Artist = value;
					this.SendPropertyChanged("Artist");
					this.OnArtistChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateAdded", DbType="DateTime NOT NULL")]
		public System.DateTime DateAdded
		{
			get
			{
				return this._DateAdded;
			}
			set
			{
				if ((this._DateAdded != value))
				{
					this.OnDateAddedChanging(value);
					this.SendPropertyChanging();
					this._DateAdded = value;
					this.SendPropertyChanged("DateAdded");
					this.OnDateAddedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sources")]
	public partial class Source : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private bool _Enabled;
		
		private System.Nullable<int> _Type;
		
		private string _Url;
		
		private int _Station;
		
		private System.Nullable<System.TimeSpan> _MinPullDelay;
		
		private System.Nullable<System.TimeSpan> _DailyPullTime;
		
		private System.Nullable<System.DateTime> _LastPull;
		
		private EntityRef<SourceType> _SourceType;
		
		private EntityRef<Station> _Station1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnEnabledChanging(bool value);
    partial void OnEnabledChanged();
    partial void OnTypeChanging(System.Nullable<int> value);
    partial void OnTypeChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnStationChanging(int value);
    partial void OnStationChanged();
    partial void OnMinPullDelayChanging(System.Nullable<System.TimeSpan> value);
    partial void OnMinPullDelayChanged();
    partial void OnDailyPullTimeChanging(System.Nullable<System.TimeSpan> value);
    partial void OnDailyPullTimeChanged();
    partial void OnLastPullChanging(System.Nullable<System.DateTime> value);
    partial void OnLastPullChanged();
    #endregion
		
		public Source()
		{
			this._SourceType = default(EntityRef<SourceType>);
			this._Station1 = default(EntityRef<Station>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Enabled", DbType="bit NOT NULL")]
		public bool Enabled
		{
			get
			{
				return this._Enabled;
			}
			set
			{
				if ((this._Enabled != value))
				{
					this.OnEnabledChanging(value);
					this.SendPropertyChanging();
					this._Enabled = value;
					this.SendPropertyChanged("Enabled");
					this.OnEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int")]
		public System.Nullable<int> Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					if (this._SourceType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Station", DbType="Int NOT NULL")]
		public int Station
		{
			get
			{
				return this._Station;
			}
			set
			{
				if ((this._Station != value))
				{
					if (this._Station1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStationChanging(value);
					this.SendPropertyChanging();
					this._Station = value;
					this.SendPropertyChanged("Station");
					this.OnStationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinPullDelay", DbType="Time")]
		public System.Nullable<System.TimeSpan> MinPullDelay
		{
			get
			{
				return this._MinPullDelay;
			}
			set
			{
				if ((this._MinPullDelay != value))
				{
					this.OnMinPullDelayChanging(value);
					this.SendPropertyChanging();
					this._MinPullDelay = value;
					this.SendPropertyChanged("MinPullDelay");
					this.OnMinPullDelayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DailyPullTime", DbType="Time")]
		public System.Nullable<System.TimeSpan> DailyPullTime
		{
			get
			{
				return this._DailyPullTime;
			}
			set
			{
				if ((this._DailyPullTime != value))
				{
					this.OnDailyPullTimeChanging(value);
					this.SendPropertyChanging();
					this._DailyPullTime = value;
					this.SendPropertyChanged("DailyPullTime");
					this.OnDailyPullTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastPull", DbType="DateTime2")]
		public System.Nullable<System.DateTime> LastPull
		{
			get
			{
				return this._LastPull;
			}
			set
			{
				if ((this._LastPull != value))
				{
					this.OnLastPullChanging(value);
					this.SendPropertyChanging();
					this._LastPull = value;
					this.SendPropertyChanged("LastPull");
					this.OnLastPullChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SourceType_Source", Storage="_SourceType", ThisKey="Type", OtherKey="Id", IsForeignKey=true)]
		public SourceType SourceType
		{
			get
			{
				return this._SourceType.Entity;
			}
			set
			{
				SourceType previousValue = this._SourceType.Entity;
				if (((previousValue != value) 
							|| (this._SourceType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SourceType.Entity = null;
						previousValue.Sources.Remove(this);
					}
					this._SourceType.Entity = value;
					if ((value != null))
					{
						value.Sources.Add(this);
						this._Type = value.Id;
					}
					else
					{
						this._Type = default(Nullable<int>);
					}
					this.SendPropertyChanged("SourceType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Station_Source", Storage="_Station1", ThisKey="Station", OtherKey="Id", IsForeignKey=true)]
		public Station Station1
		{
			get
			{
				return this._Station1.Entity;
			}
			set
			{
				Station previousValue = this._Station1.Entity;
				if (((previousValue != value) 
							|| (this._Station1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Station1.Entity = null;
						previousValue.Sources.Remove(this);
					}
					this._Station1.Entity = value;
					if ((value != null))
					{
						value.Sources.Add(this);
						this._Station = value.Id;
					}
					else
					{
						this._Station = default(int);
					}
					this.SendPropertyChanged("Station1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SourceTypes")]
	public partial class SourceType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _ClassName;
		
		private EntitySet<Source> _Sources;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnClassNameChanging(string value);
    partial void OnClassNameChanged();
    #endregion
		
		public SourceType()
		{
			this._Sources = new EntitySet<Source>(new Action<Source>(this.attach_Sources), new Action<Source>(this.detach_Sources));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ClassName
		{
			get
			{
				return this._ClassName;
			}
			set
			{
				if ((this._ClassName != value))
				{
					this.OnClassNameChanging(value);
					this.SendPropertyChanging();
					this._ClassName = value;
					this.SendPropertyChanged("ClassName");
					this.OnClassNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SourceType_Source", Storage="_Sources", ThisKey="Id", OtherKey="Type")]
		public EntitySet<Source> Sources
		{
			get
			{
				return this._Sources;
			}
			set
			{
				this._Sources.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Sources(Source entity)
		{
			this.SendPropertyChanging();
			entity.SourceType = this;
		}
		
		private void detach_Sources(Source entity)
		{
			this.SendPropertyChanging();
			entity.SourceType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Stations")]
	public partial class Station : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private bool _Enabled;
		
		private string _CallSign;
		
		private string _PlaylistName;
		
		private System.Nullable<int> _PlaylistId;
		
		private string _PlaylistUrl;
		
		private EntitySet<Source> _Sources;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnEnabledChanging(bool value);
    partial void OnEnabledChanged();
    partial void OnCallSignChanging(string value);
    partial void OnCallSignChanged();
    partial void OnPlaylistNameChanging(string value);
    partial void OnPlaylistNameChanged();
    partial void OnPlaylistIdChanging(System.Nullable<int> value);
    partial void OnPlaylistIdChanged();
    partial void OnPlaylistUrlChanging(string value);
    partial void OnPlaylistUrlChanged();
    #endregion
		
		public Station()
		{
			this._Sources = new EntitySet<Source>(new Action<Source>(this.attach_Sources), new Action<Source>(this.detach_Sources));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Enabled", DbType="Bit NOT NULL")]
		public bool Enabled
		{
			get
			{
				return this._Enabled;
			}
			set
			{
				if ((this._Enabled != value))
				{
					this.OnEnabledChanging(value);
					this.SendPropertyChanging();
					this._Enabled = value;
					this.SendPropertyChanged("Enabled");
					this.OnEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CallSign", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string CallSign
		{
			get
			{
				return this._CallSign;
			}
			set
			{
				if ((this._CallSign != value))
				{
					this.OnCallSignChanging(value);
					this.SendPropertyChanging();
					this._CallSign = value;
					this.SendPropertyChanged("CallSign");
					this.OnCallSignChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlaylistName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string PlaylistName
		{
			get
			{
				return this._PlaylistName;
			}
			set
			{
				if ((this._PlaylistName != value))
				{
					this.OnPlaylistNameChanging(value);
					this.SendPropertyChanging();
					this._PlaylistName = value;
					this.SendPropertyChanged("PlaylistName");
					this.OnPlaylistNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlaylistId", DbType="Int")]
		public System.Nullable<int> PlaylistId
		{
			get
			{
				return this._PlaylistId;
			}
			set
			{
				if ((this._PlaylistId != value))
				{
					this.OnPlaylistIdChanging(value);
					this.SendPropertyChanging();
					this._PlaylistId = value;
					this.SendPropertyChanged("PlaylistId");
					this.OnPlaylistIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlaylistUrl", DbType="NVarChar(MAX)")]
		public string PlaylistUrl
		{
			get
			{
				return this._PlaylistUrl;
			}
			set
			{
				if ((this._PlaylistUrl != value))
				{
					this.OnPlaylistUrlChanging(value);
					this.SendPropertyChanging();
					this._PlaylistUrl = value;
					this.SendPropertyChanged("PlaylistUrl");
					this.OnPlaylistUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Station_Source", Storage="_Sources", ThisKey="Id", OtherKey="Station")]
		public EntitySet<Source> Sources
		{
			get
			{
				return this._Sources;
			}
			set
			{
				this._Sources.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Sources(Source entity)
		{
			this.SendPropertyChanging();
			entity.Station1 = this;
		}
		
		private void detach_Sources(Source entity)
		{
			this.SendPropertyChanging();
			entity.Station1 = null;
		}
	}
}
#pragma warning restore 1591
